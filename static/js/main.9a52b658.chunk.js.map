{"version":3,"sources":["components/MenuItem.tsx","components/MenuToggle.tsx","components/Navigation.tsx","App.tsx","components/use-dimensions.ts","reportWebVitals.ts","index.tsx"],"names":["variants","open","y","opacity","transition","stiffness","velocity","closed","colors","MenuItem","i","style","border","motion","li","whileHover","scale","whileTap","className","Path","props","path","fill","strokeWidth","stroke","strokeLinecap","MenuToggle","toggle","onClick","width","height","viewBox","d","duration","staggerChildren","delayChildren","staggerDirection","Navigation","ul","itemIds","map","sidebar","clipPath","type","restDelta","delay","damping","App","useCycle","isOpen","toggleOpen","containerRef","useRef","ref","dimensions","useEffect","current","offsetWidth","offsetHeight","useDimensions","nav","initial","animate","custom","div","boxSizing","backgroundColor","overflow","transform","mass","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a52b658.chunk.js","sourcesContent":["import { motion } from 'framer-motion';\n\nconst variants = {\n  open: {\n    y: 0,\n    opacity: 1,\n    transition: {\n      y: { stiffness: 1000, velocity: -100 },\n    },\n  },\n  closed: {\n    y: 50,\n    opacity: 0,\n    transition: {\n      y: { stiffness: 1000 },\n    },\n  },\n};\n\nconst colors = ['#FF008C', '#D309E1', '#9C1AFF', '#7700FF', '#4400FF'];\n\nexport const MenuItem = ({ i }: any) => {\n  const style = { border: `2px solid ${colors[i]}` };\n  return (\n    <motion.li\n      variants={variants}\n      whileHover={{ scale: 1.1 }}\n      whileTap={{ scale: 0.95 }}\n    >\n      <div className=\"icon-placeholder\" style={style} />\n      <div className=\"text-placeholder\" style={style} />\n    </motion.li>\n  );\n};\n","import { motion } from 'framer-motion';\nimport * as React from 'react';\n\nconst Path = (props: any) => (\n  <motion.path\n    fill=\"transparent\"\n    strokeWidth=\"3\"\n    stroke=\"hsl(0, 0%, 18%)\"\n    strokeLinecap=\"round\"\n    {...props}\n  />\n);\n\nexport const MenuToggle = ({ toggle }: any) => (\n  <button onClick={toggle}>\n    <svg width=\"23\" height=\"23\" viewBox=\"0 0 23 23\">\n      <Path\n        variants={{\n          closed: { d: 'M 2 2.5 L 20 2.5' },\n          open: { d: 'M 3 16.5 L 17 2.5' },\n        }}\n      />\n      <Path\n        d=\"M 2 9.423 L 20 9.423\"\n        variants={{\n          closed: { opacity: 1 },\n          open: { opacity: 0 },\n        }}\n        transition={{ duration: 0.1 }}\n      />\n      <Path\n        variants={{\n          closed: { d: 'M 2 16.346 L 20 16.346' },\n          open: { d: 'M 3 2.5 L 17 16.346' },\n        }}\n      />\n    </svg>\n  </button>\n);\n","import { motion } from 'framer-motion';\nimport * as React from 'react';\n\nimport { MenuItem } from './MenuItem';\n\nconst variants = {\n  open: {\n    transition: { staggerChildren: 0.07, delayChildren: 0.2 },\n  },\n  closed: {\n    transition: { staggerChildren: 0.05, staggerDirection: -1 },\n  },\n};\n\nexport const Navigation = () => (\n  <motion.ul variants={variants}>\n    {itemIds.map((i) => (\n      <MenuItem i={i} key={i} />\n    ))}\n  </motion.ul>\n);\n\nconst itemIds = [0, 1, 2, 3, 4];\n","import { motion, useCycle } from 'framer-motion';\nimport { useRef } from 'react';\n\nimport { MenuToggle, Navigation, useDimensions } from './components';\n\nconst sidebar = {\n  open: (height = 1000) => ({\n    clipPath: `circle(${height * 2 + 200}px at 40px 40px)`,\n    transition: {\n      type: 'spring',\n      stiffness: 20,\n      restDelta: 2,\n    },\n  }),\n  closed: {\n    clipPath: 'circle(30px at 40px 40px)',\n    transition: {\n      delay: 0.5,\n      type: 'spring',\n      stiffness: 400,\n      damping: 40,\n    },\n  },\n};\n\nexport const App = () => {\n  const [isOpen, toggleOpen] = useCycle(false, true);\n  const containerRef = useRef(null);\n  const { height } = useDimensions(containerRef);\n\n  return (\n    <>\n      <motion.nav\n        initial={false}\n        animate={isOpen ? 'open' : 'closed'}\n        custom={height}\n        ref={containerRef}\n      >\n        <motion.div className=\"background\" variants={sidebar} />\n        <Navigation />\n        <MenuToggle toggle={() => toggleOpen()} />\n      </motion.nav>\n      <motion.div\n        className=\"frame\"\n        whileTap={{\n          boxSizing: 'border-box',\n          width: 99,\n          height: 442,\n          backgroundColor: '#ff99ce',\n          overflow: 'visible',\n          opacity: 0.31,\n          transform: 'rotate(-49deg)',\n          border: '7px dotted #ff2e2e',\n        }}\n        transition={{\n          type: 'spring',\n          delay: 0,\n          stiffness: 500,\n          damping: 60,\n          mass: 1,\n        }}\n      >\n        Abc\n      </motion.div>\n    </>\n  );\n};\n\nexport default App;\n","import { useEffect, useRef } from 'react';\n\n// Naive implementation - in reality would want to attach\n// a window or resize listener. Also use state/layoutEffect instead of ref/effect\n// if this is important to know on initial client render.\n// It would be safer to  return null for unmeasured states.\nexport const useDimensions = (ref: any) => {\n  const dimensions = useRef({ width: 0, height: 0 });\n\n  useEffect(() => {\n    dimensions.current.width = ref.current.offsetWidth;\n    dimensions.current.height = ref.current.offsetHeight;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return dimensions.current;\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}